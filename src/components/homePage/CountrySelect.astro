---
import { Icon } from "astro-icon";
import { countriesNames } from "../../data/talksData";
import { getIconByCountry } from "../../libs/icons";
const selectedCountry = "Display All";
---

<script>
  let selectedCountry = "Display All";
  const countrySelector = document.querySelector("#country-selector");
  const countrySelectorContainerRef = document.getElementById(
    "country-selector-container"
  ) as any;
  const getPaddingTop = (element: any) => {
    const styles = window.getComputedStyle(element);
    const paddingTop = parseInt(styles.paddingTop, 10);
    return paddingTop;
  };

  const getLiInSameLineOfClick = (event: any) => {
    const liHeight = document.querySelector("#country-selector li")?.clientHeight || 1;
    const ul = event.target;
    const ulPaddingTop = getPaddingTop(ul);
    const yReal = event.clientY - ul.getBoundingClientRect().top;
    const yRelativeToInitialOption = yReal - ulPaddingTop;
    const li = ul.querySelector(
      `li:nth-child(${Math.floor(yRelativeToInitialOption / liHeight) + 1})`
    );
    return yRelativeToInitialOption < 0 ? null : li;
  };

  const getClickedLi = (event: Event) => {
    if (event.target instanceof Element && event.target.closest("li")) {
      return event.target?.closest("li");
    }
    return getLiInSameLineOfClick(event);
  };

  const updateSelectedOption = (countryOption: Element, countryName: string) => {
    selectedCountry = countryName;
    const countryOptionClone = countryOption.cloneNode(true);
    (countryOptionClone as any).id = "country-selected";
    const countrySelectedRef = document.querySelector("#country-selected");
    (countrySelectedRef as any).replaceWith(countryOptionClone);
  };

  countrySelector?.addEventListener("click", (event) => {
    const countryElement = getClickedLi(event);
    if (countryElement) {
      const country = countryElement.dataset.country;
      updateSelectedOption(countryElement, country);
      onlyShowCountry(country);
      countrySelectorContainerRef.style.display = "none";
    }
  });

  const onlyShowCountry = (countryName: string) => {
    const countriesDiferents = document.querySelectorAll(
      `div.talk-container [data-country]`
    );
    for (let i = 0; i < countriesDiferents.length; i++) {
      const show =
        countriesDiferents[i].getAttribute("data-country") === countryName ||
        countryName === "All";
      (countriesDiferents[i] as any).style.display = show ? "block" : "none";
    }
  };

  document.getElementById("open-select-menu")?.addEventListener("click", (event) => {
    countrySelectorContainerRef.style.display = "block";
  });
</script>

<div class="flex w-full justify-center relative p-2">
  <div id="open-select-menu" class="cursor-pointer">
    <div class="flex" id="country-selected">
      <Icon name="fontisto:world-o" class="w-8" />
      <span class="place-self-center ml-2" id="selected-country">{selectedCountry}</span>
    </div>
  </div>
  <div
    class="absolute rounded-xl bg-white shadow-lg top-full hidden"
    id="country-selector-container"
  >
    <ul class="px-2 cursor-pointer py-2" id="country-selector">
      <li class="flex justify-left hover:bg-gray-50" data-country="All">
        <div class="w-12 h-12 flex items-center">
          <Icon name="fontisto:world-o" class="w-12 h-8" />
        </div>
        <span class="ml-1 place-self-center">Display All</span>
      </li>
      {
        countriesNames.map((country) => (
          <li class="flex justify-left hover:bg-gray-50" data-country={country}>
            <Icon name={getIconByCountry(country)} class="w-12" />
            <span class="ml-1 place-self-center">{country}</span>
          </li>
        ))
      }
    </ul>
  </div>
</div>
